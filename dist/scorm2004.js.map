{"version":3,"file":"scorm2004.js","mappings":"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","sources":["webpack://scorm-again/./node_modules/lodash.debounce/index.js","webpack://scorm-again/./src/BaseAPI.js","webpack://scorm-again/./src/Scorm2004API.js","webpack://scorm-again/./src/cmi/common.js","webpack://scorm-again/./src/cmi/scorm2004_cmi.js","webpack://scorm-again/./src/constants/api_constants.js","webpack://scorm-again/./src/constants/error_codes.js","webpack://scorm-again/./src/constants/language_constants.js","webpack://scorm-again/./src/constants/regex.js","webpack://scorm-again/./src/constants/response_constants.js","webpack://scorm-again/./src/exceptions.js","webpack://scorm-again/./src/utilities.js","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/compat get default export","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/global","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object","webpack://scorm-again/./src/exports/scorm2004.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","// @flow\nimport {CMIArray} from './cmi/common';\nimport {ValidationError} from './exceptions';\nimport ErrorCodes from './constants/error_codes';\nimport APIConstants from './constants/api_constants';\nimport {unflatten} from './utilities';\nimport debounce from 'lodash.debounce';\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on it's own.\n */\nexport default class BaseAPI {\n  #timeout;\n  #error_codes;\n  #settings = {\n    autocommit: false,\n    autocommitSeconds: 10,\n    asyncCommit: false,\n    sendBeaconCommit: false,\n    lmsCommitUrl: false,\n    dataCommitFormat: 'json', // valid formats are 'json' or 'flattened', 'params'\n    commitRequestDataType: 'application/json;charset=UTF-8',\n    autoProgress: false,\n    logLevel: global_constants.LOG_LEVEL_ERROR,\n    selfReportSessionTime: false,\n    alwaysSendTotalTime: false,\n    strict_errors: true,\n    xhrHeaders: {},\n    xhrWithCredentials: false,\n    responseHandler: function(xhr) {\n      let result;\n      if (typeof xhr !== 'undefined') {\n        result = JSON.parse(xhr.responseText);\n        if (result === null || !{}.hasOwnProperty.call(result, 'result')) {\n          result = {};\n          if (xhr.status === 200) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        }\n      }\n      return result;\n    },\n    requestHandler: function(commitObject) {\n      return commitObject;\n    },\n    onLogMessage: function(messageLevel, logMessage) {\n      switch (messageLevel) {\n        case global_constants.LOG_LEVEL_ERROR:\n          console.error(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_WARNING:\n          console.warn(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_INFO:\n          console.info(logMessage);\n          break;\n        case global_constants.LOG_LEVEL_DEBUG:\n          if (console.debug) {\n            console.debug(logMessage);\n          } else {\n            console.log(logMessage);\n          }\n          break;\n      }\n    },\n  };\n  cmi;\n  startingData: {};\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {object} error_codes\n   * @param {object} settings\n   */\n  constructor(error_codes, settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError('Cannot construct BaseAPI instances directly');\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = 0;\n    this.listenerArray = [];\n\n    this.#timeout = null;\n    this.#error_codes = error_codes;\n\n    this.settings = settings;\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n      callbackName: String,\n      initializeMessage?: String,\n      terminationMessage?: String) {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this.#error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this.#error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = 0;\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Getter for #error_codes\n   * @return {object}\n   */\n  get error_codes() {\n    return this.#error_codes;\n  }\n\n  /**\n   * Getter for #settings\n   * @return {object}\n   */\n  get settings() {\n    return this.#settings;\n  }\n\n  /**\n   * Setter for #settings\n   * @param {object} settings\n   */\n  set settings(settings: Object) {\n    this.#settings = {...this.#settings, ...settings};\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(\n      callbackName: String,\n      checkTerminated: boolean) {\n    let returnValue = global_constants.SCORM_TRUE;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.TERMINATION_BEFORE_INIT,\n        this.#error_codes.MULTIPLE_TERMINATION)) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result = this.storeData(true);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        typeof result.errorCode !== 'undefined' && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n      callbackName: String,\n      checkTerminated: boolean,\n      CMIElement: String) {\n    let returnValue;\n\n    if (this.checkState(checkTerminated,\n        this.#error_codes.RETRIEVE_BEFORE_INIT,\n        this.#error_codes.RETRIEVE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(callbackName, CMIElement, ': returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n      callbackName: String,\n      commitCallback: String,\n      checkTerminated: boolean,\n      CMIElement,\n      value) {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.STORE_BEFORE_INIT,\n        this.#error_codes.STORE_AFTER_TERM)) {\n      if (checkTerminated) this.lastErrorCode = 0;\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        if (e instanceof ValidationError) {\n          this.lastErrorCode = e.errorCode;\n          returnValue = global_constants.SCORM_FALSE;\n        } else {\n          if (e.message) {\n            console.error(e.message);\n          } else {\n            console.error(e);\n          }\n          this.throwSCORMError(this.#error_codes.GENERAL);\n        }\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === '0') {\n      if (this.settings.autocommit && !this.#timeout) {\n        this.scheduleCommit(this.settings.autocommitSeconds * 1000, commitCallback);\n      }\n    }\n\n    this.apiLog(callbackName, CMIElement,\n        ': ' + value + ': result: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(\n      callbackName: String,\n      checkTerminated: boolean) {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_TRUE;\n\n    if (this.checkState(checkTerminated, this.#error_codes.COMMIT_BEFORE_INIT,\n        this.#error_codes.COMMIT_AFTER_TERM)) {\n      const result = this.storeData(false);\n      if (!this.settings.sendBeaconCommit && !this.settings.asyncCommit &&\n        result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue = (typeof result !== 'undefined' && result.result) ?\n        result.result : global_constants.SCORM_FALSE;\n\n      this.apiLog(callbackName, 'HttpRequest', ' Result: ' + returnValue,\n          global_constants.LOG_LEVEL_DEBUG);\n\n      if (checkTerminated) this.lastErrorCode = 0;\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: String) {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: String, CMIErrorCode) {\n    let returnValue = '';\n\n    if (CMIErrorCode !== null && CMIErrorCode !== '') {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, null, 'returned: ' + returnValue,\n        global_constants.LOG_LEVEL_INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n      checkTerminated: boolean,\n      beforeInitError: number,\n      afterTermError?: number) {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   */\n  apiLog(\n      functionName: String,\n      CMIElement: String,\n      logMessage: String,\n      messageLevel: number) {\n    logMessage = this.formatMessage(functionName, CMIElement, logMessage);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {string} message\n   * @return {string}\n   */\n  formatMessage(functionName: String, CMIElement: String, message: String) {\n    const baseLength = 20;\n    let messageString = '';\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += ' ';\n    }\n\n    messageString += ': ';\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += ' ';\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: String, tester: String) {\n    return str && tester && str.match(tester);\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {*} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  _checkObjectHasProperty(refObject, attribute: String) {\n    return Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n          Object.getPrototypeOf(refObject), attribute) ||\n      (attribute in refObject);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(_errorNumber, _detail) {\n    throw new Error(\n        'The getLmsErrorMessageDetails method has not been implemented');\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement) {\n    throw new Error('The getCMIValue method has not been implemented');\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement, _value) {\n    throw new Error('The setCMIValue method has not been implemented');\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n      methodName: String, scorm2004: boolean, CMIElement, value) {\n    if (!CMIElement || CMIElement === '') {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      const attribute = structure[i];\n\n      if (i === structure.length - 1) {\n        if (scorm2004 && (attribute.substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          this.throwSCORMError(this.#error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (this.isInitialized() &&\n            this.stringMatches(CMIElement, '\\\\.correct_responses\\\\.\\\\d+')) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === 0) {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[i + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(CMIElement, value,\n                  foundFirstIndex);\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update i value to skip the array position\n            i++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(methodName, null,\n          `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n          global_constants.LOG_LEVEL_WARNING);\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement, _value) {\n    // just a stub method\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {*}\n   * @abstract\n   */\n  getChildElement(_CMIElement, _value, _foundFirstIndex) {\n    throw new Error('The getChildElement method has not been implemented');\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  _commonGetCMIValue(methodName: String, scorm2004: boolean, CMIElement) {\n    if (!CMIElement || CMIElement === '') {\n      return '';\n    }\n\n    const structure = CMIElement.split('.');\n    let refObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004 ?\n      this.#error_codes.UNDEFINED_DATA_MODEL :\n      this.#error_codes.GENERAL;\n\n    for (let i = 0; i < structure.length; i++) {\n      attribute = structure[i];\n\n      if (!scorm2004) {\n        if (i === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if ((String(attribute).substr(0, 8) === '{target=') &&\n          (typeof refObject._isTargetValid == 'function')) {\n          const target = String(attribute).substr(8, String(attribute).length - 9);\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[i + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(this.#error_codes.VALUE_NOT_INITIALIZED,\n                uninitializedErrorMessage);\n            break;\n          }\n\n          // Have to update i value to skip the array position\n          i++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === '_children') {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === '_count') {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized() {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized() {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated() {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog('on', functionName, `Added event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: String, callback: function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      const removeIndex = this.listenerArray.findIndex((obj) =>\n        obj.functionName === functionName &&\n        obj.CMIElement === CMIElement &&\n        obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog('off', functionName, `Removed event listener: ${this.listenerArray.length}`, global_constants.LOG_LEVEL_INFO);\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: String) {\n    const listenerFunctions = listenerName.split(' ');\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split('.');\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + '.', '');\n      }\n\n      this.listenerArray = this.listenerArray.filter((obj) =>\n        obj.functionName !== functionName &&\n        obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  processListeners(functionName: String, CMIElement: String, value: any) {\n    this.apiLog(functionName, CMIElement, value);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (CMIElement && listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) ===\n        '*') {\n        CMIElementsMatch = CMIElement.indexOf(listener.CMIElement.substring(0,\n            listener.CMIElement.length - 1)) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message: String) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog('throwSCORMError', null, errorNumber + ': ' + message,\n        global_constants.LOG_LEVEL_ERROR);\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: String) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = 0;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {string}\n   * @abstract\n   */\n  storeData(_calculateTotalTime) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromFlattenedJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(a, c, a_pattern) {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === 'id') {\n            return -1;\n          } else if (a_match[3] === 'type') {\n            if (c_match[3] === 'id') {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function(key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function([a, b], [c, d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {object} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json, CMIElement) {\n    if (!this.isNotInitialized()) {\n      console.error(\n          'loadFromJSON can only be called before the call to lmsInitialize.');\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : 'cmi';\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + '.' : '') + key;\n        const value = json[key];\n\n        if (value['childArray']) {\n          for (let i = 0; i < value['childArray'].length; i++) {\n            this.loadFromJSON(value['childArray'][i],\n                currentCMIElement + '.' + i);\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString() {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({cmi});\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject() {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {*}\n   * @abstract\n   */\n  renderCommitCMI(_terminateCommit) {\n    throw new Error(\n        'The storeData method has not been implemented');\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {object|Array} params\n   * @param {boolean} immediate\n   * @return {object}\n   */\n  processHttpRequest(url: String, params, immediate = false) {\n    const api = this;\n    const process = function(url, params, settings, error_codes) {\n      const genericError = {\n        'result': global_constants.SCORM_FALSE,\n        'errorCode': error_codes.GENERAL,\n      };\n\n      let result;\n      if (!settings.sendBeaconCommit) {\n        const httpReq = new XMLHttpRequest();\n        httpReq.open('POST', url, settings.asyncCommit);\n\n        if (Object.keys(settings.xhrHeaders).length) {\n          Object.keys(settings.xhrHeaders).forEach((header) => {\n            httpReq.setRequestHeader(header, settings.xhrHeaders[header]);\n          });\n        }\n\n        httpReq.withCredentials = settings.xhrWithCredentials;\n\n        if (settings.asyncCommit) {\n          httpReq.onload = function(e) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          };\n        }\n        try {\n          params = settings.requestHandler(params);\n          if (params instanceof Array) {\n            httpReq.setRequestHeader('Content-Type',\n                'application/x-www-form-urlencoded');\n            httpReq.send(params.join('&'));\n          } else {\n            httpReq.setRequestHeader('Content-Type',\n                settings.commitRequestDataType);\n            httpReq.send(JSON.stringify(params));\n          }\n\n          if (!settings.asyncCommit) {\n            if (typeof settings.responseHandler === 'function') {\n              result = settings.responseHandler(httpReq);\n            } else {\n              result = JSON.parse(httpReq.responseText);\n            }\n          } else {\n            result = {};\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n            api.processListeners('CommitSuccess');\n            return result;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      } else {\n        try {\n          const headers = {\n            type: settings.commitRequestDataType,\n          };\n          let blob;\n          if (params instanceof Array) {\n            blob = new Blob([params.join('&')], headers);\n          } else {\n            blob = new Blob([JSON.stringify(params)], headers);\n          }\n\n          result = {};\n          if (navigator.sendBeacon(url, blob)) {\n            result.result = global_constants.SCORM_TRUE;\n            result.errorCode = 0;\n          } else {\n            result.result = global_constants.SCORM_FALSE;\n            result.errorCode = 101;\n          }\n        } catch (e) {\n          console.error(e);\n          api.processListeners('CommitError');\n          return genericError;\n        }\n      }\n\n      if (typeof result === 'undefined') {\n        api.processListeners('CommitError');\n        return genericError;\n      }\n\n      if (result.result === true ||\n        result.result === global_constants.SCORM_TRUE) {\n        api.processListeners('CommitSuccess');\n      } else {\n        api.processListeners('CommitError');\n      }\n\n      return result;\n    };\n\n    if (typeof debounce !== 'undefined') {\n      const debounced = debounce(process, 500);\n      debounced(url, params, this.settings, this.error_codes);\n\n      // if we're terminating, go ahead and commit immediately\n      if (immediate) {\n        debounced.flush();\n      }\n\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return process(url, params, this.settings, this.error_codes);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this.#timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog('scheduleCommit', '', 'scheduled',\n        global_constants.LOG_LEVEL_DEBUG);\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this.#timeout) {\n      this.#timeout.cancel();\n      this.#timeout = null;\n      this.apiLog('clearScheduledCommit', '', 'cleared',\n          global_constants.LOG_LEVEL_DEBUG);\n    }\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  #API;\n  #cancelled = false;\n  #timeout;\n  #callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this.#API = API;\n    this.#timeout = setTimeout(this.wrapper.bind(this), when);\n    this.#callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this.#cancelled = true;\n    if (this.#timeout) {\n      clearTimeout(this.#timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this.#cancelled) {\n      this.#API.commit(this.#callback);\n    }\n  }\n}\n","// @flow\nimport BaseAPI from './BaseAPI';\nimport {\n  ADL,\n  CMI,\n  CMICommentsObject,\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n  CMIObjectivesObject,\n} from './cmi/scorm2004_cmi';\nimport * as Utilities from './utilities';\nimport APIConstants from './constants/api_constants';\nimport ErrorCodes from './constants/error_codes';\nimport Responses from './constants/response_constants';\nimport ValidLanguages from './constants/language_constants';\nimport Regex from './constants/regex';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst global_constants = APIConstants.global;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst correct_responses = Responses.correct;\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * API class for SCORM 2004\n */\nexport default class Scorm2004API extends BaseAPI {\n  #version: '1.0';\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {object} settings\n   */\n  constructor(settings: {}) {\n    const finalSettings = {\n      ...{\n        mastery_override: false,\n      }, ...settings,\n    };\n\n    super(scorm2004_error_codes, finalSettings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsTerminate;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  /**\n   * Getter for #version\n   * @return {string}\n   */\n  get version() {\n    return this.#version;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize() {\n    this.cmi.initialize();\n    return this.initialize('Initialize');\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsTerminate() {\n    const result = this.terminate('Terminate', true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.adl.nav.request !== '_none_') {\n        switch (this.adl.nav.request) {\n          case 'continue':\n            this.processListeners('SequenceNext');\n            break;\n          case 'previous':\n            this.processListeners('SequencePrevious');\n            break;\n          case 'choice':\n            this.processListeners('SequenceChoice');\n            break;\n          case 'exit':\n            this.processListeners('SequenceExit');\n            break;\n          case 'exitAll':\n            this.processListeners('SequenceExitAll');\n            break;\n          case 'abandon':\n            this.processListeners('SequenceAbandon');\n            break;\n          case 'abandonAll':\n            this.processListeners('SequenceAbandonAll');\n            break;\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners('SequenceNext');\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement) {\n    return this.getValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement, value) {\n    return this.setValue('SetValue', 'Commit', true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit() {\n    return this.commit('Commit');\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError() {\n    return this.getLastError('GetLastError');\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode) {\n    return this.getErrorString('GetErrorString', CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode) {\n    return this.getDiagnostic('GetDiagnostic', CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement, value) {\n    return this._commonSetCMIValue('SetValue', true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {any}\n   */\n  getChildElement(CMIElement, value, foundFirstIndex) {\n    let newChild;\n\n    if (this.stringMatches(CMIElement, 'cmi\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIObjectivesObject();\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+')) {\n      const parts = CMIElement.split('.');\n      const index = Number(parts[2]);\n      const interaction = this.cmi.interactions.childArray[index];\n      if (this.isInitialized()) {\n        if (!interaction.type) {\n          this.throwSCORMError(\n              scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n        } else {\n          this.checkDuplicateChoiceResponse(interaction, value);\n\n          const response_type = correct_responses[interaction.type];\n          if (response_type) {\n            this.checkValidResponseType(response_type, value, interaction.type);\n          } else {\n            this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n                'Incorrect Response Type: ' + interaction.type);\n          }\n        }\n      }\n      if (this.lastErrorCode === 0) {\n        newChild = new CMIInteractionsCorrectResponsesObject();\n      }\n    } else if (foundFirstIndex && this.stringMatches(CMIElement,\n        'cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObjectivesObject();\n    } else if (!foundFirstIndex &&\n        this.stringMatches(CMIElement, 'cmi\\\\.interactions\\\\.\\\\d+')) {\n      newChild = new CMIInteractionsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_learner\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject();\n    } else if (this.stringMatches(CMIElement,\n        'cmi\\\\.comments_from_lms\\\\.\\\\d+')) {\n      newChild = new CMICommentsObject(true);\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(response_type, value, interaction_type) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Pattern Too Long');\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction, value) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === 'choice') {\n      for (let i = 0; i < interaction_count && this.lastErrorCode ===\n      0; i++) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement, value) {\n    const parts = CMIElement.split('.');\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = correct_responses[interaction.type];\n    if (typeof response_type.limit === 'undefined' || interaction_count <=\n        response_type.limit) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (this.lastErrorCode === 0 &&\n          (!response_type.duplicate ||\n              !this.checkDuplicatedPattern(interaction.correct_responses,\n                  pattern_index, value)) ||\n          (this.lastErrorCode === 0 && value === '')) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === 0) {\n          this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n              'Data Model Element Pattern Already Exists');\n        }\n      }\n    } else {\n      this.throwSCORMError(scorm2004_error_codes.GENERAL_SET_FAILURE,\n          'Data Model Element Collection Limit Reached');\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement) {\n    return this._commonGetCMIValue('GetValue', true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(errorNumber, detail) {\n    let basicMessage = '';\n    let detailMessage = '';\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm2004_constants.error_descriptions[errorNumber]) {\n      basicMessage = scorm2004_constants.error_descriptions[errorNumber].basicMessage;\n      detailMessage = scorm2004_constants.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern = (correct_response, current_index, value) => {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  };\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(interaction_type, nodes, value) {\n    const response = correct_responses[interaction_type];\n    const formatRegex = new RegExp(response.format);\n    for (let i = 0; i < nodes.length && this.lastErrorCode === 0; i++) {\n      if (interaction_type.match(\n          '^(fill-in|long-fill-in|matching|performance|sequencing)$')) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n          } else {\n            if (!values[1].match(new RegExp(response.format2))) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n        } else {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if ((!matches && value !== '') ||\n            (!matches && interaction_type === 'true-false')) {\n          this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n        } else {\n          if (interaction_type === 'numeric' && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          } else {\n            if (nodes[i] !== '' && response.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === 0; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node) {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n        '^({(lang|case_matters|order_matters)=([^}]+)})');\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case 'lang':\n          langMatches = node.match(scorm2004_regex.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (ValidLanguages[lang.toLowerCase()] === undefined) {\n                this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case 'case_matters':\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case 'order_matters':\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== 'true' && matches[3] !== 'false') {\n              this.throwSCORMError(scorm2004_error_codes.TYPE_MISMATCH);\n            }\n          }\n\n          seenOrder = true;\n          break;\n        default:\n          break;\n      }\n      node = node.substr(matches[1].length);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean) {\n    const cmiExport = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case 'flattened':\n        return Utilities.flatten(cmiExport);\n      case 'params':\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case 'json':\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {string}\n   */\n  storeData(terminateCommit: boolean) {\n    if (terminateCommit) {\n      if (this.cmi.mode === 'normal') {\n        if (this.cmi.credit === 'credit') {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              console.debug('Setting Completion Status: Completed');\n              this.cmi.completion_status = 'completed';\n            } else {\n              console.debug('Setting Completion Status: Incomplete');\n              this.cmi.completion_status = 'incomplete';\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              console.debug('Setting Success Status: Passed');\n              this.cmi.success_status = 'passed';\n            } else {\n              console.debug('Setting Success Status: Failed');\n              this.cmi.success_status = 'failed';\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (this.adl.nav.request !== (this.startingData?.adl?.nav?.request) &&\n        this.adl.nav.request !== '_none_') {\n      this.adl.nav.request = encodeURIComponent(this.adl.nav.request);\n      navRequest = true;\n    }\n\n    const commitObject = this.renderCommitCMI(terminateCommit ||\n        this.settings.alwaysSendTotalTime);\n\n    if (this.apiLogLevel === global_constants.LOG_LEVEL_DEBUG) {\n      console.debug('Commit (terminated: ' +\n            (terminateCommit ? 'yes' : 'no') + '): ');\n      console.debug(commitObject);\n    }\n    if (this.settings.lmsCommitUrl) {\n      const result = this.processHttpRequest(this.settings.lmsCommitUrl,\n          commitObject, terminateCommit);\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (navRequest && result.navRequest !== undefined &&\n            result.navRequest !== '') {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n  }\n}\n","// @flow\nimport APIConstants from '../constants/api_constants';\nimport ErrorCodes from '../constants/error_codes';\nimport Regex from '../constants/regex';\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkValidFormat(\n    value: String,\n    regexPattern: String,\n    errorCode: number,\n    errorClass: function,\n    allowEmptyString?: boolean) {\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === '') {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === '') {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {*} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {class} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n    value: any,\n    rangePattern: String,\n    errorCode: number,\n    errorClass: function) {\n  const ranges = rangePattern.split('#');\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if ((ranges[1] === '*') || (value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass.prototype.constructor(errorCode);\n    }\n  } else {\n    throw new errorClass.prototype.constructor(errorCode);\n  }\n}\n\n/**\n * Base class for API cmi objects\n */\nexport class BaseCMI {\n  jsonString = false;\n  #initialized = false;\n  #start_time;\n\n  /**\n   * Constructor for BaseCMI, just marks the class as abstract\n   */\n  constructor() {\n    if (new.target === BaseCMI) {\n      throw new TypeError('Cannot construct BaseCMI instances directly');\n    }\n  }\n\n  /**\n   * Getter for #initialized\n   * @return {boolean}\n   */\n  get initialized() {\n    return this.#initialized;\n  }\n\n  /**\n   * Getter for #start_time\n   * @return {Number}\n   */\n  get start_time() {\n    return this.#start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    this.#initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime() {\n    this.#start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  /**\n   * Constructor for *.score\n   * @param {string} score_children\n   * @param {string} score_range\n   * @param {string} max\n   * @param {number} invalidErrorCode\n   * @param {number} invalidTypeCode\n   * @param {number} invalidRangeCode\n   * @param {string} decimalRegex\n   * @param {class} errorClass\n   */\n  constructor(\n      {\n        score_children,\n        score_range,\n        max,\n        invalidErrorCode,\n        invalidTypeCode,\n        invalidRangeCode,\n        decimalRegex,\n        errorClass,\n      }) {\n    super();\n\n    this.#_children = score_children ||\n        scorm12_constants.score_children;\n    this.#_score_range = !score_range ? false : scorm12_regex.score_range;\n    this.#max = (max || max === '') ? max : '100';\n    this.#_invalid_error_code = invalidErrorCode ||\n        scorm12_error_codes.INVALID_SET_VALUE;\n    this.#_invalid_type_code = invalidTypeCode ||\n        scorm12_error_codes.TYPE_MISMATCH;\n    this.#_invalid_range_code = invalidRangeCode ||\n        scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.#_decimal_regex = decimalRegex ||\n        scorm12_regex.CMIDecimal;\n    this.#_error_class = errorClass;\n  }\n\n  #_children;\n  #_score_range;\n  #_invalid_error_code;\n  #_invalid_type_code;\n  #_invalid_range_code;\n  #_decimal_regex;\n  #_error_class;\n  #raw = '';\n  #min = '';\n  #max;\n\n  /**\n   * Getter for _children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throw new this.#_error_class.prototype.constructor(this.#_invalid_error_code);\n  }\n\n  /**\n   * Getter for #raw\n   * @return {string}\n   */\n  get raw() {\n    return this.#raw;\n  }\n\n  /**\n   * Setter for #raw\n   * @param {string} raw\n   */\n  set raw(raw) {\n    if (checkValidFormat(raw, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(raw, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#raw = raw;\n    }\n  }\n\n  /**\n   * Getter for #min\n   * @return {string}\n   */\n  get min() {\n    return this.#min;\n  }\n\n  /**\n   * Setter for #min\n   * @param {string} min\n   */\n  set min(min) {\n    if (checkValidFormat(min, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(min, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#min = min;\n    }\n  }\n\n  /**\n   * Getter for #max\n   * @return {string}\n   */\n  get max() {\n    return this.#max;\n  }\n\n  /**\n   * Setter for #max\n   * @param {string} max\n   */\n  set max(max) {\n    if (checkValidFormat(max, this.#_decimal_regex, this.#_invalid_type_code, this.#_error_class) &&\n        (!this.#_score_range ||\n            checkValidRange(max, this.#_score_range, this.#_invalid_range_code, this.#_error_class))) {\n      this.#max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {{min: string, max: string, raw: string}}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'raw': this.raw,\n      'min': this.min,\n      'max': this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  /**\n   * Constructor cmi *.n arrays\n   * @param {string} children\n   * @param {number} errorCode\n   * @param {class} errorClass\n   */\n  constructor({children, errorCode, errorClass}) {\n    super();\n    this.#_children = children;\n    this.#errorCode = errorCode;\n    this.#errorClass = errorClass;\n    this.childArray = [];\n  }\n\n  #errorCode;\n  #errorClass;\n  #_children;\n\n  /**\n   * Getter for _children\n   * @return {*}\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count() {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count) {\n    throw new this.#errorClass.prototype.constructor(this.#errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + ''] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\nimport {\n  BaseCMI,\n  checkValidFormat,\n  checkValidRange,\n  CMIArray,\n  CMIScore,\n} from './common';\nimport APIConstants from '../constants/api_constants';\nimport Regex from '../constants/regex';\nimport ErrorCodes from '../constants/error_codes';\nimport Responses from '../constants/response_constants';\nimport {Scorm2004ValidationError} from '../exceptions';\nimport * as Util from '../utilities';\n\nconst scorm2004_constants = APIConstants.scorm2004;\nconst scorm2004_error_codes = ErrorCodes.scorm2004;\nconst learner_responses = Responses.learner;\n\nconst scorm2004_regex = Regex.scorm2004;\n\n/**\n * Helper method for throwing Read Only error\n */\nfunction throwReadOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.READ_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Write Only error\n */\nfunction throwWriteOnlyError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.WRITE_ONLY_ELEMENT);\n}\n\n/**\n * Helper method for throwing Type Mismatch error\n */\nfunction throwTypeMismatchError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.TYPE_MISMATCH);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwDependencyNotEstablishedError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.DEPENDENCY_NOT_ESTABLISHED);\n}\n\n/**\n * Helper method for throwing Dependency Not Established error\n */\nfunction throwGeneralSetError() {\n  throw new Scorm2004ValidationError(scorm2004_error_codes.GENERAL_SET_FAILURE);\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nfunction check2004ValidFormat(\n    value: String,\n    regexPattern: String,\n    allowEmptyString?: boolean) {\n  return checkValidFormat(\n      value,\n      regexPattern,\n      scorm2004_error_codes.TYPE_MISMATCH,\n      Scorm2004ValidationError,\n      allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {*} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nfunction check2004ValidRange(value: any, rangePattern: String) {\n  return checkValidRange(\n      value,\n      rangePattern,\n      scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n      Scorm2004ValidationError,\n  );\n}\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean) {\n    super();\n\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n\n    if (initialized) this.initialize();\n  }\n\n  #_version = '1.0';\n  #_children = scorm2004_constants.cmi_children;\n  #completion_status = 'unknown';\n  #completion_threshold = '';\n  #credit = 'credit';\n  #entry = '';\n  #exit = '';\n  #launch_data = '';\n  #learner_id = '';\n  #learner_name = '';\n  #location = '';\n  #max_time_allowed = '';\n  #mode = 'normal';\n  #progress_measure = '';\n  #scaled_passing_score = '';\n  #session_time = 'PT0H0M0S';\n  #success_status = 'unknown';\n  #suspend_data = '';\n  #time_limit_action = 'continue,no message';\n  #total_time = '';\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Getter for #_version\n   * @return {string}\n   * @private\n   */\n  get _version() {\n    return this.#_version;\n  }\n\n  /**\n   * Setter for #_version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n      this.#completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for #completion_threshold\n   * @return {string}\n   */\n  get completion_threshold() {\n    return this.#completion_threshold;\n  }\n\n  /**\n   * Setter for #completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold) {\n    !this.initialized ?\n      this.#completion_threshold = completion_threshold :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Setter for #credit\n   * @return {string}\n   */\n  get credit() {\n    return this.#credit;\n  }\n\n  /**\n   * Setter for #credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit) {\n    !this.initialized ? this.#credit = credit : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #entry\n   * @return {string}\n   */\n  get entry() {\n    return this.#entry;\n  }\n\n  /**\n   * Setter for #entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry) {\n    !this.initialized ? this.#entry = entry : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#exit;\n  }\n\n  /**\n   * Getter for #exit\n   * @param {string} exit\n   */\n  set exit(exit) {\n    if (check2004ValidFormat(exit, scorm2004_regex.CMIExit, true)) {\n      this.#exit = exit;\n    }\n  }\n\n  /**\n   * Getter for #launch_data\n   * @return {string}\n   */\n  get launch_data() {\n    return this.#launch_data;\n  }\n\n  /**\n   * Setter for #launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data) {\n    !this.initialized ? this.#launch_data = launch_data : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_id\n   * @return {string}\n   */\n  get learner_id() {\n    return this.#learner_id;\n  }\n\n  /**\n   * Setter for #learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id) {\n    !this.initialized ? this.#learner_id = learner_id : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #learner_name\n   * @return {string}\n   */\n  get learner_name() {\n    return this.#learner_name;\n  }\n\n  /**\n   * Setter for #learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name) {\n    !this.initialized ?\n      this.#learner_name = learner_name :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (check2004ValidFormat(location, scorm2004_regex.CMIString1000)) {\n      this.#location = location;\n    }\n  }\n\n  /**\n   * Getter for #max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed() {\n    return this.#max_time_allowed;\n  }\n\n  /**\n   * Setter for #max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed) {\n    !this.initialized ?\n      this.#max_time_allowed = max_time_allowed :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #mode\n   * @return {string}\n   */\n  get mode() {\n    return this.#mode;\n  }\n\n  /**\n   * Setter for #mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode) {\n    !this.initialized ? this.#mode = mode : throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(progress_measure, scorm2004_regex.progress_range)) {\n      this.#progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for #scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score() {\n    return this.#scaled_passing_score;\n  }\n\n  /**\n   * Setter for #scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score) {\n    !this.initialized ?\n      this.#scaled_passing_score = scaled_passing_score :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time() {\n    return (!this.jsonString) ? throwWriteOnlyError() : this.#session_time;\n  }\n\n  /**\n   * Setter for #session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time) {\n    if (check2004ValidFormat(session_time, scorm2004_regex.CMITimespan)) {\n      this.#session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n      this.#success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for #suspend_data\n   * @return {string}\n   */\n  get suspend_data() {\n    return this.#suspend_data;\n  }\n\n  /**\n   * Setter for #suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data) {\n    if (check2004ValidFormat(suspend_data, scorm2004_regex.CMIString64000,\n        true)) {\n      this.#suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for #time_limit_action\n   * @return {string}\n   */\n  get time_limit_action() {\n    return this.#time_limit_action;\n  }\n\n  /**\n   * Setter for #time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action) {\n    !this.initialized ?\n      this.#time_limit_action = time_limit_action :\n      throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #total_time\n   * @return {string}\n   */\n  get total_time() {\n    return this.#total_time;\n  }\n\n  /**\n   * Setter for #total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time) {\n    !this.initialized ? this.#total_time = total_time : throwReadOnlyError();\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime() {\n    let sessionTime = this.#session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== 'undefined' && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n        this.#total_time,\n        sessionTime,\n        scorm2004_regex.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comments_from_learner': this.comments_from_learner,\n      'comments_from_lms': this.comments_from_lms,\n      'completion_status': this.completion_status,\n      'completion_threshold': this.completion_threshold,\n      'credit': this.credit,\n      'entry': this.entry,\n      'exit': this.exit,\n      'interactions': this.interactions,\n      'launch_data': this.launch_data,\n      'learner_id': this.learner_id,\n      'learner_name': this.learner_name,\n      'learner_preference': this.learner_preference,\n      'location': this.location,\n      'max_time_allowed': this.max_time_allowed,\n      'mode': this.mode,\n      'objectives': this.objectives,\n      'progress_measure': this.progress_measure,\n      'scaled_passing_score': this.scaled_passing_score,\n      'score': this.score,\n      'session_time': this.session_time,\n      'success_status': this.success_status,\n      'suspend_data': this.suspend_data,\n      'time_limit_action': this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nclass CMILearnerPreference extends BaseCMI {\n  #_children = scorm2004_constants.student_preference_children;\n  #audio_level = '1';\n  #language = '';\n  #delivery_speed = '1';\n  #audio_captioning = '0';\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #_children\n   * @return {string}\n   * @private\n   */\n  get _children() {\n    return this.#_children;\n  }\n\n  /**\n   * Setter for #_children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #audio_level\n   * @return {string}\n   */\n  get audio_level() {\n    return this.#audio_level;\n  }\n\n  /**\n   * Setter for #audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level) {\n    if (check2004ValidFormat(audio_level, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(audio_level, scorm2004_regex.audio_range)) {\n      this.#audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for #language\n   * @return {string}\n   */\n  get language() {\n    return this.#language;\n  }\n\n  /**\n   * Setter for #language\n   * @param {string} language\n   */\n  set language(language) {\n    if (check2004ValidFormat(language, scorm2004_regex.CMILang)) {\n      this.#language = language;\n    }\n  }\n\n  /**\n   * Getter for #delivery_speed\n   * @return {string}\n   */\n  get delivery_speed() {\n    return this.#delivery_speed;\n  }\n\n  /**\n   * Setter for #delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed) {\n    if (check2004ValidFormat(delivery_speed, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, scorm2004_regex.speed_range)) {\n      this.#delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for #audio_captioning\n   * @return {string}\n   */\n  get audio_captioning() {\n    return this.#audio_captioning;\n  }\n\n  /**\n   * Setter for #audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning) {\n    if (check2004ValidFormat(audio_captioning, scorm2004_regex.CMISInteger) &&\n      check2004ValidRange(audio_captioning, scorm2004_regex.text_range)) {\n      this.#audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'audio_level': this.audio_level,\n      'language': this.language,\n      'delivery_speed': this.delivery_speed,\n      'audio_captioning': this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions object\n */\nclass CMIInteractions extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.interactions_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.objectives object\n */\nclass CMIObjectives extends CMIArray {\n  /**\n   * Constructor for cmi.objectives Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.objectives_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n */\nclass CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\nclass CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  #id = '';\n  #type = '';\n  #timestamp = '';\n  #weighting = '';\n  #learner_response = '';\n  #result = '';\n  #latency = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #type\n   * @return {string}\n   */\n  get type() {\n    return this.#type;\n  }\n\n  /**\n   * Setter for #type\n   * @param {string} type\n   */\n  set type(type) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(type, scorm2004_regex.CMIType)) {\n        this.#type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for #weighting\n   * @return {string}\n   */\n  get weighting() {\n    return this.#weighting;\n  }\n\n  /**\n   * Setter for #weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(weighting, scorm2004_regex.CMIDecimal)) {\n        this.#weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for #learner_response\n   * @return {string}\n   */\n  get learner_response() {\n    return this.#learner_response;\n  }\n\n  /**\n   * Setter for #learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response) {\n    if (this.initialized && (this.#type === '' || this.#id === '')) {\n      throwDependencyNotEstablishedError();\n    } else {\n      let nodes = [];\n      const response_type = learner_responses[this.type];\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if ((nodes.length > 0) && (nodes.length <= response_type.max)) {\n          const formatRegex = new RegExp(response_type.format);\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i].split(response_type.delimiter2);\n              if (values.length === 2) {\n                if (!values[0].match(formatRegex)) {\n                  throwTypeMismatchError();\n                } else {\n                  if (!values[1].match(new RegExp(response_type.format2))) {\n                    throwTypeMismatchError();\n                  }\n                }\n              } else {\n                throwTypeMismatchError();\n              }\n            } else {\n              if (!nodes[i].match(formatRegex)) {\n                throwTypeMismatchError();\n              } else {\n                if (nodes[i] !== '' && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throwTypeMismatchError();\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throwGeneralSetError();\n        }\n\n        this.#learner_response = learner_response;\n      } else {\n        throwTypeMismatchError();\n      }\n    }\n  }\n\n  /**\n   * Getter for #result\n   * @return {string}\n   */\n  get result() {\n    return this.#result;\n  }\n\n  /**\n   * Setter for #result\n   * @param {string} result\n   */\n  set result(result) {\n    if (check2004ValidFormat(result, scorm2004_regex.CMIResult)) {\n      this.#result = result;\n    }\n  }\n\n  /**\n   * Getter for #latency\n   * @return {string}\n   */\n  get latency() {\n    return this.#latency;\n  }\n\n  /**\n   * Setter for #latency\n   * @param {string} latency\n   */\n  set latency(latency) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(latency, scorm2004_regex.CMITimespan)) {\n        this.#latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'type': this.type,\n      'objectives': this.objectives,\n      'timestamp': this.timestamp,\n      'weighting': this.weighting,\n      'learner_response': this.learner_response,\n      'result': this.result,\n      'latency': this.latency,\n      'description': this.description,\n      'correct_responses': this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  #id = '';\n  #success_status = 'unknown';\n  #completion_status = 'unknown';\n  #progress_measure = '';\n  #description = '';\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n\n    this.score = new Scorm2004CMIScore();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * Getter for #success_status\n   * @return {string}\n   */\n  get success_status() {\n    return this.#success_status;\n  }\n\n  /**\n   * Setter for #success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n        this.#success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #completion_status\n   * @return {string}\n   */\n  get completion_status() {\n    return this.#completion_status;\n  }\n\n  /**\n   * Setter for #completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n        this.#completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for #progress_measure\n   * @return {string}\n   */\n  get progress_measure() {\n    return this.#progress_measure;\n  }\n\n  /**\n   * Setter for #progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n        check2004ValidRange(progress_measure,\n            scorm2004_regex.progress_range)) {\n        this.#progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for #description\n   * @return {string}\n   */\n  get description() {\n    return this.#description;\n  }\n\n  /**\n   * Setter for #description\n   * @param {string} description\n   */\n  set description(description) {\n    if (this.initialized && this.#id === '') {\n      throwDependencyNotEstablishedError();\n    } else {\n      if (check2004ValidFormat(description, scorm2004_regex.CMILangString250,\n          true)) {\n        this.#description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n      'success_status': this.success_status,\n      'completion_status': this.completion_status,\n      'progress_measure': this.progress_measure,\n      'description': this.description,\n      'score': this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi *.score object\n */\nclass Scorm2004CMIScore extends CMIScore {\n  #scaled = '';\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super(\n        {\n          score_children: scorm2004_constants.score_children,\n          max: '',\n          invalidErrorCode: scorm2004_error_codes.READ_ONLY_ELEMENT,\n          invalidTypeCode: scorm2004_error_codes.TYPE_MISMATCH,\n          invalidRangeCode: scorm2004_error_codes.VALUE_OUT_OF_RANGE,\n          decimalRegex: scorm2004_regex.CMIDecimal,\n          errorClass: Scorm2004ValidationError,\n        });\n  }\n\n  /**\n   * Getter for #scaled\n   * @return {string}\n   */\n  get scaled() {\n    return this.#scaled;\n  }\n\n  /**\n   * Setter for #scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled) {\n    if (check2004ValidFormat(scaled, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(scaled, scorm2004_regex.scaled_range)) {\n      this.#scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'scaled': this.scaled,\n      'raw': super.raw,\n      'min': super.min,\n      'max': super.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\nexport class CMICommentsObject extends BaseCMI {\n  #comment = '';\n  #location = '';\n  #timestamp = '';\n  #readOnlyAfterInit;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit = false) {\n    super();\n    this.#comment = '';\n    this.#location = '';\n    this.#timestamp = '';\n    this.#readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Getter for #comment\n   * @return {string}\n   */\n  get comment() {\n    return this.#comment;\n  }\n\n  /**\n   * Setter for #comment\n   * @param {string} comment\n   */\n  set comment(comment) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(comment, scorm2004_regex.CMILangString4000,\n          true)) {\n        this.#comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for #location\n   * @return {string}\n   */\n  get location() {\n    return this.#location;\n  }\n\n  /**\n   * Setter for #location\n   * @param {string} location\n   */\n  set location(location) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(location, scorm2004_regex.CMIString250)) {\n        this.#location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for #timestamp\n   * @return {string}\n   */\n  get timestamp() {\n    return this.#timestamp;\n  }\n\n  /**\n   * Setter for #timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp) {\n    if (this.initialized && this.#readOnlyAfterInit) {\n      throwReadOnlyError();\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this.#timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'comment': this.comment,\n      'location': this.location,\n      'timestamp': this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  #id = '';\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #id\n   * @return {string}\n   */\n  get id() {\n    return this.#id;\n  }\n\n  /**\n   * Setter for #id\n   * @param {string} id\n   */\n  set id(id) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this.#id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'id': this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  #pattern = '';\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #pattern\n   * @return {string}\n   */\n  get pattern() {\n    return this.#pattern;\n  }\n\n  /**\n   * Setter for #pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern) {\n    if (check2004ValidFormat(pattern, scorm2004_regex.CMIFeedback)) {\n      this.#pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'pattern': this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n\n    this.nav = new ADLNav();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: {\n   *        request: string\n   *      }\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'nav': this.nav,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav object\n */\nclass ADLNav extends BaseCMI {\n  #request = '_none_';\n\n  /**\n   * Constructor for adl.nav\n   */\n  constructor() {\n    super();\n\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Getter for #request\n   * @return {string}\n   */\n  get request() {\n    return this.#request;\n  }\n\n  /**\n   * Setter for #request\n   * @param {string} request\n   */\n  set request(request) {\n    if (check2004ValidFormat(request, scorm2004_regex.NAVEvent)) {\n      this.#request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'request': this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\nclass ADLNavRequestValid extends BaseCMI {\n  #continue = 'unknown';\n  #previous = 'unknown';\n  choice = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n  jump = class {\n    /**\n     * Check if target is valid\n     * @param {*} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target) => 'unknown';\n  };\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for #continue\n   * @return {string}\n   */\n  get continue() {\n    return this.#continue;\n  }\n\n  /**\n   * Setter for #continue. Just throws an error.\n   * @param {*} _\n   */\n  set continue(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * Getter for #previous\n   * @return {string}\n   */\n  get previous() {\n    return this.#previous;\n  }\n\n  /**\n   * Setter for #previous. Just throws an error.\n   * @param {*} _\n   */\n  set previous(_) {\n    throwReadOnlyError();\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON() {\n    this.jsonString = true;\n    const result = {\n      'previous': this.previous,\n      'continue': this.continue,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","// @flow\n\nconst global = {\n  SCORM_TRUE: 'true',\n  SCORM_FALSE: 'false',\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12 = {\n  // Children lists\n  cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions',\n  core_children: 'student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time',\n  score_children: 'raw,min,max',\n  comments_children: 'content,location,time',\n  objectives_children: 'id,score,status',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio,language,speed,text',\n  interactions_children: 'id,objectives,time,type,correct_responses,weighting,student_response,result,latency',\n\n  error_descriptions: {\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use LMSGetDiagnostic for more information',\n    },\n    '201': {\n      basicMessage: 'Invalid argument error',\n      detailMessage: 'Indicates that an argument represents an invalid data model element or is otherwise incorrect.',\n    },\n    '202': {\n      basicMessage: 'Element cannot have children',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    '203': {\n      basicMessage: 'Element not an array - cannot have count',\n      detailMessage: 'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    '301': {\n      basicMessage: 'Not initialized',\n      detailMessage: 'Indicates that an API call was made before the call to lmsInitialize.',\n    },\n    '401': {\n      basicMessage: 'Not implemented error',\n      detailMessage: 'The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.',\n    },\n    '402': {\n      basicMessage: 'Invalid set value, element is a keyword',\n      detailMessage: 'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    '403': {\n      basicMessage: 'Element is read only',\n      detailMessage: 'LMSSetValue was called with a data model element that can only be read.',\n    },\n    '404': {\n      basicMessage: 'Element is write only',\n      detailMessage: 'LMSGetValue was called on a data model element that can only be written to.',\n    },\n    '405': {\n      basicMessage: 'Incorrect Data Type',\n      detailMessage: 'LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    cmi_children: 'core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation',\n    student_preference_children: 'audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows',\n    student_data_children: 'attempt_number,tries,mastery_score,max_time_allowed,time_limit_action',\n    student_demographics_children: 'city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience',\n    tries_children: 'time,status,score',\n    attempt_records_children: 'score,lesson_status',\n    paths_children: 'location_id,date,time,status,why_left,time_in_element',\n  },\n};\n\nconst scorm2004 = {\n  // Children lists\n  cmi_children: '_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time',\n  comments_children: 'comment,timestamp,location',\n  score_children: 'max,raw,scaled,min',\n  objectives_children: 'progress_measure,completion_status,success_status,description,score,id',\n  correct_responses_children: 'pattern',\n  student_data_children: 'mastery_score,max_time_allowed,time_limit_action',\n  student_preference_children: 'audio_level,audio_captioning,delivery_speed,language',\n  interactions_children: 'id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description',\n\n  error_descriptions: {\n    '0': {\n      basicMessage: 'No Error',\n      detailMessage: 'No error occurred, the previous API call was successful.',\n    },\n    '101': {\n      basicMessage: 'General Exception',\n      detailMessage: 'No specific error code exists to describe the error. Use GetDiagnostic for more information.',\n    },\n    '102': {\n      basicMessage: 'General Initialization Failure',\n      detailMessage: 'Call to Initialize failed for an unknown reason.',\n    },\n    '103': {\n      basicMessage: 'Already Initialized',\n      detailMessage: 'Call to Initialize failed because Initialize was already called.',\n    },\n    '104': {\n      basicMessage: 'Content Instance Terminated',\n      detailMessage: 'Call to Initialize failed because Terminate was already called.',\n    },\n    '111': {\n      basicMessage: 'General Termination Failure',\n      detailMessage: 'Call to Terminate failed for an unknown reason.',\n    },\n    '112': {\n      basicMessage: 'Termination Before Initialization',\n      detailMessage: 'Call to Terminate failed because it was made before the call to Initialize.',\n    },\n    '113': {\n      basicMessage: 'Termination After Termination',\n      detailMessage: 'Call to Terminate failed because Terminate was already called.',\n    },\n    '122': {\n      basicMessage: 'Retrieve Data Before Initialization',\n      detailMessage: 'Call to GetValue failed because it was made before the call to Initialize.',\n    },\n    '123': {\n      basicMessage: 'Retrieve Data After Termination',\n      detailMessage: 'Call to GetValue failed because it was made after the call to Terminate.',\n    },\n    '132': {\n      basicMessage: 'Store Data Before Initialization',\n      detailMessage: 'Call to SetValue failed because it was made before the call to Initialize.',\n    },\n    '133': {\n      basicMessage: 'Store Data After Termination',\n      detailMessage: 'Call to SetValue failed because it was made after the call to Terminate.',\n    },\n    '142': {\n      basicMessage: 'Commit Before Initialization',\n      detailMessage: 'Call to Commit failed because it was made before the call to Initialize.',\n    },\n    '143': {\n      basicMessage: 'Commit After Termination',\n      detailMessage: 'Call to Commit failed because it was made after the call to Terminate.',\n    },\n    '201': {\n      basicMessage: 'General Argument Error',\n      detailMessage: 'An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.',\n    },\n    '301': {\n      basicMessage: 'General Get Failure',\n      detailMessage: 'Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '351': {\n      basicMessage: 'General Set Failure',\n      detailMessage: 'Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '391': {\n      basicMessage: 'General Commit Failure',\n      detailMessage: 'Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.',\n    },\n    '401': {\n      basicMessage: 'Undefined Data Model Element',\n      detailMessage: 'The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.',\n    },\n    '402': {\n      basicMessage: 'Unimplemented Data Model Element',\n      detailMessage: 'The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.',\n    },\n    '403': {\n      basicMessage: 'Data Model Element Value Not Initialized',\n      detailMessage: 'Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.',\n    },\n    '404': {\n      basicMessage: 'Data Model Element Is Read Only',\n      detailMessage: 'SetValue was called with a data model element that can only be read.',\n    },\n    '405': {\n      basicMessage: 'Data Model Element Is Write Only',\n      detailMessage: 'GetValue was called on a data model element that can only be written to.',\n    },\n    '406': {\n      basicMessage: 'Data Model Element Type Mismatch',\n      detailMessage: 'SetValue was called with a value that is not consistent with the data format of the supplied data model element.',\n    },\n    '407': {\n      basicMessage: 'Data Model Element Value Out Of Range',\n      detailMessage: 'The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.',\n    },\n    '408': {\n      basicMessage: 'Data Model Dependency Not Established',\n      detailMessage: 'Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.',\n    },\n  },\n};\n\nconst APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\n\nexport default APIConstants;\n","// @flow\nconst global = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12 = {\n  ...global, ...{\n    RETRIEVE_BEFORE_INIT: 301,\n    STORE_BEFORE_INIT: 301,\n    COMMIT_BEFORE_INIT: 301,\n    ARGUMENT_ERROR: 201,\n    CHILDREN_ERROR: 202,\n    COUNT_ERROR: 203,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 401,\n    VALUE_NOT_INITIALIZED: 301,\n    INVALID_SET_VALUE: 402,\n    READ_ONLY_ELEMENT: 403,\n    WRITE_ONLY_ELEMENT: 404,\n    TYPE_MISMATCH: 405,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst scorm2004 = {\n  ...global, ...{\n    INITIALIZATION_FAILED: 102,\n    INITIALIZED: 103,\n    TERMINATED: 104,\n    TERMINATION_FAILURE: 111,\n    TERMINATION_BEFORE_INIT: 112,\n    MULTIPLE_TERMINATIONS: 113,\n    RETRIEVE_BEFORE_INIT: 122,\n    RETRIEVE_AFTER_TERM: 123,\n    STORE_BEFORE_INIT: 132,\n    STORE_AFTER_TERM: 133,\n    COMMIT_BEFORE_INIT: 142,\n    COMMIT_AFTER_TERM: 143,\n    ARGUMENT_ERROR: 201,\n    GENERAL_GET_FAILURE: 301,\n    GENERAL_SET_FAILURE: 351,\n    GENERAL_COMMIT_FAILURE: 391,\n    UNDEFINED_DATA_MODEL: 401,\n    UNIMPLEMENTED_ELEMENT: 402,\n    VALUE_NOT_INITIALIZED: 403,\n    READ_ONLY_ELEMENT: 404,\n    WRITE_ONLY_ELEMENT: 405,\n    TYPE_MISMATCH: 406,\n    VALUE_OUT_OF_RANGE: 407,\n    DEPENDENCY_NOT_ESTABLISHED: 408,\n  },\n};\n\nconst ErrorCodes = {\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default ErrorCodes;\n","const ValidLanguages = {\n  'aa': 'aa', 'ab': 'ab', 'ae': 'ae', 'af': 'af', 'ak': 'ak', 'am': 'am',\n  'an': 'an', 'ar': 'ar', 'as': 'as', 'av': 'av', 'ay': 'ay', 'az': 'az',\n  'ba': 'ba', 'be': 'be', 'bg': 'bg', 'bh': 'bh', 'bi': 'bi', 'bm': 'bm',\n  'bn': 'bn', 'bo': 'bo', 'br': 'br', 'bs': 'bs', 'ca': 'ca', 'ce': 'ce',\n  'ch': 'ch', 'co': 'co', 'cr': 'cr', 'cs': 'cs', 'cu': 'cu', 'cv': 'cv',\n  'cy': 'cy', 'da': 'da', 'de': 'de', 'dv': 'dv', 'dz': 'dz', 'ee': 'ee',\n  'el': 'el', 'en': 'en', 'eo': 'eo', 'es': 'es', 'et': 'et', 'eu': 'eu',\n  'fa': 'fa', 'ff': 'ff', 'fi': 'fi', 'fj': 'fj', 'fo': 'fo', 'fr': 'fr',\n  'fy': 'fy', 'ga': 'ga', 'gd': 'gd', 'gl': 'gl', 'gn': 'gn', 'gu': 'gu',\n  'gv': 'gv', 'ha': 'ha', 'he': 'he', 'hi': 'hi', 'ho': 'ho', 'hr': 'hr',\n  'ht': 'ht', 'hu': 'hu', 'hy': 'hy', 'hz': 'hz', 'ia': 'ia', 'id': 'id',\n  'ie': 'ie', 'ig': 'ig', 'ii': 'ii', 'ik': 'ik', 'io': 'io', 'is': 'is',\n  'it': 'it', 'iu': 'iu', 'ja': 'ja', 'jv': 'jv', 'ka': 'ka', 'kg': 'kg',\n  'ki': 'ki', 'kj': 'kj', 'kk': 'kk', 'kl': 'kl', 'km': 'km', 'kn': 'kn',\n  'ko': 'ko', 'kr': 'kr', 'ks': 'ks', 'ku': 'ku', 'kv': 'kv', 'kw': 'kw',\n  'ky': 'ky', 'la': 'la', 'lb': 'lb', 'lg': 'lg', 'li': 'li', 'ln': 'ln',\n  'lo': 'lo', 'lt': 'lt', 'lu': 'lu', 'lv': 'lv', 'mg': 'mg', 'mh': 'mh',\n  'mi': 'mi', 'mk': 'mk', 'ml': 'ml', 'mn': 'mn', 'mo': 'mo', 'mr': 'mr',\n  'ms': 'ms', 'mt': 'mt', 'my': 'my', 'na': 'na', 'nb': 'nb', 'nd': 'nd',\n  'ne': 'ne', 'ng': 'ng', 'nl': 'nl', 'nn': 'nn', 'no': 'no', 'nr': 'nr',\n  'nv': 'nv', 'ny': 'ny', 'oc': 'oc', 'oj': 'oj', 'om': 'om', 'or': 'or',\n  'os': 'os', 'pa': 'pa', 'pi': 'pi', 'pl': 'pl', 'ps': 'ps', 'pt': 'pt',\n  'qu': 'qu', 'rm': 'rm', 'rn': 'rn', 'ro': 'ro', 'ru': 'ru', 'rw': 'rw',\n  'sa': 'sa', 'sc': 'sc', 'sd': 'sd', 'se': 'se', 'sg': 'sg', 'sh': 'sh',\n  'si': 'si', 'sk': 'sk', 'sl': 'sl', 'sm': 'sm', 'sn': 'sn', 'so': 'so',\n  'sq': 'sq', 'sr': 'sr', 'ss': 'ss', 'st': 'st', 'su': 'su', 'sv': 'sv',\n  'sw': 'sw', 'ta': 'ta', 'te': 'te', 'tg': 'tg', 'th': 'th', 'ti': 'ti',\n  'tk': 'tk', 'tl': 'tl', 'tn': 'tn', 'to': 'to', 'tr': 'tr', 'ts': 'ts',\n  'tt': 'tt', 'tw': 'tw', 'ty': 'ty', 'ug': 'ug', 'uk': 'uk', 'ur': 'ur',\n  'uz': 'uz', 've': 've', 'vi': 'vi', 'vo': 'vo', 'wa': 'wa', 'wo': 'wo',\n  'xh': 'xh', 'yi': 'yi', 'yo': 'yo', 'za': 'za', 'zh': 'zh', 'zu': 'zu',\n  'aar': 'aar', 'abk': 'abk', 'ave': 'ave', 'afr': 'afr', 'aka': 'aka',\n  'amh': 'amh', 'arg': 'arg', 'ara': 'ara', 'asm': 'asm', 'ava': 'ava',\n  'aym': 'aym', 'aze': 'aze', 'bak': 'bak', 'bel': 'bel', 'bul': 'bul',\n  'bih': 'bih', 'bis': 'bis', 'bam': 'bam', 'ben': 'ben', 'tib': 'tib',\n  'bod': 'bod', 'bre': 'bre', 'bos': 'bos', 'cat': 'cat', 'che': 'che',\n  'cha': 'cha', 'cos': 'cos', 'cre': 'cre', 'cze': 'cze', 'ces': 'ces',\n  'chu': 'chu', 'chv': 'chv', 'wel': 'wel', 'cym': 'cym', 'dan': 'dan',\n  'ger': 'ger', 'deu': 'deu', 'div': 'div', 'dzo': 'dzo', 'ewe': 'ewe',\n  'gre': 'gre', 'ell': 'ell', 'eng': 'eng', 'epo': 'epo', 'spa': 'spa',\n  'est': 'est', 'baq': 'baq', 'eus': 'eus', 'per': 'per', 'fas': 'fas',\n  'ful': 'ful', 'fin': 'fin', 'fij': 'fij', 'fao': 'fao', 'fre': 'fre',\n  'fra': 'fra', 'fry': 'fry', 'gle': 'gle', 'gla': 'gla', 'glg': 'glg',\n  'grn': 'grn', 'guj': 'guj', 'glv': 'glv', 'hau': 'hau', 'heb': 'heb',\n  'hin': 'hin', 'hmo': 'hmo', 'hrv': 'hrv', 'hat': 'hat', 'hun': 'hun',\n  'arm': 'arm', 'hye': 'hye', 'her': 'her', 'ina': 'ina', 'ind': 'ind',\n  'ile': 'ile', 'ibo': 'ibo', 'iii': 'iii', 'ipk': 'ipk', 'ido': 'ido',\n  'ice': 'ice', 'isl': 'isl', 'ita': 'ita', 'iku': 'iku', 'jpn': 'jpn',\n  'jav': 'jav', 'geo': 'geo', 'kat': 'kat', 'kon': 'kon', 'kik': 'kik',\n  'kua': 'kua', 'kaz': 'kaz', 'kal': 'kal', 'khm': 'khm', 'kan': 'kan',\n  'kor': 'kor', 'kau': 'kau', 'kas': 'kas', 'kur': 'kur', 'kom': 'kom',\n  'cor': 'cor', 'kir': 'kir', 'lat': 'lat', 'ltz': 'ltz', 'lug': 'lug',\n  'lim': 'lim', 'lin': 'lin', 'lao': 'lao', 'lit': 'lit', 'lub': 'lub',\n  'lav': 'lav', 'mlg': 'mlg', 'mah': 'mah', 'mao': 'mao', 'mri': 'mri',\n  'mac': 'mac', 'mkd': 'mkd', 'mal': 'mal', 'mon': 'mon', 'mol': 'mol',\n  'mar': 'mar', 'may': 'may', 'msa': 'msa', 'mlt': 'mlt', 'bur': 'bur',\n  'mya': 'mya', 'nau': 'nau', 'nob': 'nob', 'nde': 'nde', 'nep': 'nep',\n  'ndo': 'ndo', 'dut': 'dut', 'nld': 'nld', 'nno': 'nno', 'nor': 'nor',\n  'nbl': 'nbl', 'nav': 'nav', 'nya': 'nya', 'oci': 'oci', 'oji': 'oji',\n  'orm': 'orm', 'ori': 'ori', 'oss': 'oss', 'pan': 'pan', 'pli': 'pli',\n  'pol': 'pol', 'pus': 'pus', 'por': 'por', 'que': 'que', 'roh': 'roh',\n  'run': 'run', 'rum': 'rum', 'ron': 'ron', 'rus': 'rus', 'kin': 'kin',\n  'san': 'san', 'srd': 'srd', 'snd': 'snd', 'sme': 'sme', 'sag': 'sag',\n  'slo': 'slo', 'sin': 'sin', 'slk': 'slk', 'slv': 'slv', 'smo': 'smo',\n  'sna': 'sna', 'som': 'som', 'alb': 'alb', 'sqi': 'sqi', 'srp': 'srp',\n  'ssw': 'ssw', 'sot': 'sot', 'sun': 'sun', 'swe': 'swe', 'swa': 'swa',\n  'tam': 'tam', 'tel': 'tel', 'tgk': 'tgk', 'tha': 'tha', 'tir': 'tir',\n  'tuk': 'tuk', 'tgl': 'tgl', 'tsn': 'tsn', 'ton': 'ton', 'tur': 'tur',\n  'tso': 'tso', 'tat': 'tat', 'twi': 'twi', 'tah': 'tah', 'uig': 'uig',\n  'ukr': 'ukr', 'urd': 'urd', 'uzb': 'uzb', 'ven': 'ven', 'vie': 'vie',\n  'vol': 'vol', 'wln': 'wln', 'wol': 'wol', 'xho': 'xho', 'yid': 'yid',\n  'yor': 'yor', 'zha': 'zha', 'chi': 'chi', 'zho': 'zho', 'zul': 'zul',\n};\n\nexport default ValidLanguages;\n","// @flow\n\nconst scorm12 = {\n  CMIString256: '^.{0,255}$',\n  CMIString4096: '^.{0,4096}$',\n  CMITime: '^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$', // eslint-disable-line\n  CMITimespan: '^([0-9]{2,}):([0-9]{2}):([0-9]{2})(\\.[0-9]{1,2})?$', // eslint-disable-line\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{0,3})(\\.[0-9]*)?$', // eslint-disable-line\n  CMIIdentifier: '^[\\\\u0021-\\\\u007E\\\\s]{0,255}$',\n  CMIFeedback: '^.{0,255}$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMIStatus: '^(passed|completed|failed|incomplete|browsed)$',\n  CMIStatus2: '^(passed|completed|failed|incomplete|browsed|not attempted)$',\n  CMIExit: '^(time-out|suspend|logout|)$',\n  CMIType: '^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$',\n  CMIResult: '^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$', // eslint-disable-line\n  NAVEvent: '^(previous|continue)$',\n\n  // Data ranges\n  score_range: '0#100',\n  audio_range: '-1#100',\n  speed_range: '-100#100',\n  weighting_range: '-100#100',\n  text_range: '-1#1',\n};\n\nconst aicc = {\n  ...scorm12, ...{\n    CMIIdentifier: '^\\\\w{1,255}$',\n  },\n};\n\nconst scorm2004 = {\n  CMIString200: '^[\\\\u0000-\\\\uFFFF]{0,200}$',\n  CMIString250: '^[\\\\u0000-\\\\uFFFF]{0,250}$',\n  CMIString1000: '^[\\\\u0000-\\\\uFFFF]{0,1000}$',\n  CMIString4000: '^[\\\\u0000-\\\\uFFFF]{0,4000}$',\n  CMIString64000: '^[\\\\u0000-\\\\uFFFF]{0,64000}$',\n  CMILang: '^([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?$|^$', // eslint-disable-line\n  CMILangString250: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,250}$)?$', // eslint-disable-line\n  CMILangcr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\}))(.*?)$', // eslint-disable-line\n  CMILangString250cr: '^((\\{lang=([a-zA-Z]{2,3}|i|x)?(\\-[a-zA-Z0-9\\-]{2,8})?\\})?(.{0,250})?)?$', // eslint-disable-line\n  CMILangString4000: '^(\\{lang=([a-zA-Z]{2,3}|i|x)(\\-[a-zA-Z0-9\\-]{2,8})?\\})?((?!\\{.*$).{0,4000}$)?$', // eslint-disable-line\n  CMITime: '^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$',\n  CMITimespan: '^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$',\n  CMIInteger: '^\\\\d+$',\n  CMISInteger: '^-?([0-9]+)$',\n  CMIDecimal: '^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$',\n  CMIIdentifier: '^\\\\S{1,250}[a-zA-Z0-9]$',\n  CMIShortIdentifier: '^[\\\\w\\\\.\\\\-\\\\_]{1,250}$', // eslint-disable-line\n  CMILongIdentifier: '^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$', // need to re-examine this\n  CMIFeedback: '^.*$', // This must be redefined\n  CMIIndex: '[._](\\\\d+).',\n  CMIIndexStore: '.N(\\\\d+).',\n\n  // Vocabulary Data Type Definition\n  CMICStatus: '^(completed|incomplete|not attempted|unknown)$',\n  CMISStatus: '^(passed|failed|unknown)$',\n  CMIExit: '^(time-out|suspend|logout|normal)$',\n  CMIType: '^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$',\n  CMIResult: '^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$',\n  NAVEvent: '^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|\\{target=\\\\S{0,200}[a-zA-Z0-9]\\}choice|jump)$', // eslint-disable-line\n  NAVBoolean: '^(unknown|true|false$)',\n  NAVTarget: '^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$',\n\n  // Data ranges\n  scaled_range: '-1#1',\n  audio_range: '0#*',\n  speed_range: '0#*',\n  text_range: '-1#1',\n  progress_range: '0#1',\n};\n\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\n\nexport default Regex;\n","// @flow\nimport Regex from './regex';\n\nconst scorm2004_regex = Regex.scorm2004;\n\nconst learner = {\n  'true-false': {\n    format: '^true$|^false$',\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'choice': {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n  },\n  'fill-in': {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'long-fill-in': {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'matching': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'performance': {\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n  },\n  'sequencing': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n  },\n  'likert': {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'numeric': {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n  'other': {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: '',\n    unique: false,\n  },\n};\n\nconst correct = {\n  'true-false': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: '^true$|^false$',\n    limit: 1,\n  },\n  'choice': {\n    max: 36,\n    delimiter: '[,]',\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  'fill-in': {\n    max: 10,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  'long-fill-in': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  'matching': {\n    max: 36,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  'performance': {\n    max: 250,\n    delimiter: '[,]',\n    delimiter2: '[.]',\n    unique: false,\n    duplicate: false,\n    format: '^$|' + scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIDecimal + '|^$|' +\n        scorm2004_regex.CMIShortIdentifier,\n  },\n  'sequencing': {\n    max: 36,\n    delimiter: '[,]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  'likert': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  'numeric': {\n    max: 2,\n    delimiter: '[:]',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  'other': {\n    max: 1,\n    delimiter: '',\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nconst Responses = {\n  learner: learner,\n  correct: correct,\n};\n\nexport default Responses;\n","// @flow\n\nimport APIConstants from './constants/api_constants';\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError extends Error {\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(errorCode: number, errorMessage: String, detailedMessage: String) {\n    super(errorMessage);\n    this.#errorCode = errorCode;\n    this.#errorMessage = errorMessage;\n    this.#detailedMessage = detailedMessage;\n  }\n\n  #errorCode;\n  #errorMessage;\n  #detailedMessage;\n\n  /**\n   * Getter for #errorCode\n   * @return {number}\n   */\n  get errorCode() {\n    return this.#errorCode;\n  }\n\n  /**\n   * Getter for #errorMessage\n   * @return {string}\n   */\n  get errorMessage() {\n    return this.#errorMessage;\n  }\n\n  /**\n   * Getter for #detailedMessage\n   * @return {string}\n   */\n  get detailedMessage() {\n    return this.#detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(errorCode, scorm12_errors[String(errorCode)].basicMessage, scorm12_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm12_errors['101'].basicMessage, scorm12_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(errorCode, aicc_errors[String(errorCode)].basicMessage, aicc_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, aicc_errors['101'].basicMessage, aicc_errors['101'].detailMessage);\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(errorCode, scorm2004_errors[String(errorCode)].basicMessage, scorm2004_errors[String(errorCode)].detailMessage);\n    } else {\n      super(101, scorm2004_errors['101'].basicMessage, scorm2004_errors['101'].detailMessage);\n    }\n  }\n}\n","// @flow\nexport const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\nconst designations = [\n  ['D', SECONDS_PER_DAY],\n  ['H', SECONDS_PER_HOUR],\n  ['M', SECONDS_PER_MINUTE],\n  ['S', SECONDS_PER_SECOND],\n];\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {Number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return '00:00:00';\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = '';\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n    msStr = '.' + msStr.split('.')[1];\n  }\n\n  return (hours + ':' + minutes + ':' + seconds).replace(/\\b\\d\\b/g,\n      '0$&') + msStr;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {Number} seconds\n * @return {String}\n */\nexport function getSecondsAsISODuration(seconds: Number) {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return 'PT0S';\n  }\n\n  let duration = 'P';\n  let remainder = seconds;\n\n  designations.forEach(([sign, current_seconds]) => {\n    let value = Math.floor(remainder / current_seconds);\n\n    remainder = remainder % current_seconds;\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (sign === 'S' && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if ((duration.indexOf('D') > 0 ||\n          sign === 'H' || sign === 'M' || sign === 'S') &&\n          duration.indexOf('T') === -1) {\n        duration += 'T';\n      }\n      duration += `${value}${sign}`;\n    }\n  });\n\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(timeString: String, timeRegex: RegExp) {\n  if (!timeString || typeof timeString !== 'string' ||\n      !timeString.match(timeRegex)) {\n    return 0;\n  }\n  const parts = timeString.split(':');\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return (hours * 3600) + (minutes * 60) + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(duration: String, durationRegex: RegExp) {\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, months, , days, hours, minutes, seconds] = new RegExp(\n      durationRegex).exec(duration) || [];\n\n  let result = 0.0;\n\n  result += (Number(seconds) * 1.0 || 0.0);\n  result += (Number(minutes) * 60.0 || 0.0);\n  result += (Number(hours) * 3600.0 || 0.0);\n  result += (Number(days) * (60 * 60 * 24.0) || 0.0);\n  result += (Number(years) * (60 * 60 * 24 * 365.0) || 0.0);\n\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n    first: String,\n    second: String,\n    durationRegex: RegExp) {\n  return getSecondsAsISODuration(\n      getDurationAsSeconds(first, durationRegex) +\n      getDurationAsSeconds(second, durationRegex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n    first: String,\n    second: String,\n    timeRegex: RegExp) {\n  return getSecondsAsHHMMSS(\n      getTimeAsSeconds(first, timeRegex) +\n      getTimeAsSeconds(\n          second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data) {\n  const result = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur, prop) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + '.' + p : p);\n        }\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, '');\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data) {\n  'use strict';\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result = {};\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = '';\n      let m = regex.exec(p);\n      while (m) {\n        cur = cur[prop] || (cur[prop] = (m[2] ? [] : {}));\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n      cur[prop] = data[p];\n    }\n  }\n  return result[''] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number) {\n  if (Math.floor(num) === num || String(num).indexOf('.') < 0) return 0;\n  const parts = num.toString().split('.')[1];\n  return parts.length || 0;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Scorm2004API from '../Scorm2004API';\n\nwindow.Scorm2004API = Scorm2004API;\n"],"names":["FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectProto","prototype","objectToString","toString","nativeMax","Math","max","nativeMin","min","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","toNumber","isObject","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments","value","type","isObjectLike","isSymbol","call","other","valueOf","replace","isBinary","test","slice","module","exports","CMIArray","ValidationError","ErrorCodes","APIConstants","unflatten","global_constants","scorm12_error_codes","scorm12","BaseAPI","error_codes","settings","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","xhr","JSON","parse","responseText","hasOwnProperty","status","SCORM_TRUE","errorCode","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","apiLogLevel","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","INITIALIZED","isTerminated","TERMINATED","cmi","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","CMIElement","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","message","GENERAL","commitCallback","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","CMIErrorCode","getLmsErrorMessageDetails","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","baseLength","messageString","fillChars","length","i","CMIElementBaseLength","j","str","tester","match","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","Error","_CMIElement","_value","methodName","scorm2004","structure","split","foundFirstIndex","invalidErrorMessage","invalidErrorCode","UNDEFINED_DATA_MODEL","substr","_isTargetValid","READ_ONLY_ELEMENT","_checkObjectHasProperty","stringMatches","validateCorrectResponse","index","isNaN","item","childArray","newChild","getChildElement","initialized","initialize","push","_foundFirstIndex","uninitializedErrorMessage","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","listenerName","callback","listenerFunctions","listenerSplit","removeIndex","findIndex","obj","splice","filter","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","substring","indexOf","errorNumber","success","_calculateTotalTime","json","testPattern","a","c","a_pattern","a_match","c_match","a_num","Number","c_num","int_pattern","obj_pattern","keys","map","key","sort","b","d","forEach","element","loadFromJSON","startingData","currentCMIElement","constructor","stringify","renderCMIToJSONString","_terminateCommit","url","params","immediate","api","process","genericError","httpReq","XMLHttpRequest","open","header","setRequestHeader","withCredentials","onload","Array","send","join","headers","blob","Blob","navigator","sendBeacon","when","ScheduledCommit","API","wrapper","bind","commit","ADL","CMI","CMICommentsObject","CMIInteractionsCorrectResponsesObject","CMIInteractionsObject","CMIInteractionsObjectivesObject","CMIObjectivesObject","Utilities","Responses","ValidLanguages","Regex","scorm2004_constants","scorm2004_error_codes","correct_responses","correct","scorm2004_regex","Scorm2004API","finalSettings","mastery_override","correct_response","current_index","found","count","_count","adl","Initialize","lmsInitialize","Terminate","lmsTerminate","GetValue","lmsGetValue","SetValue","lmsSetValue","Commit","lmsCommit","GetLastError","lmsGetLastError","GetErrorString","lmsGetErrorString","GetDiagnostic","lmsGetDiagnostic","terminate","nav","request","getValue","setValue","getLastError","getErrorString","getDiagnostic","_commonSetCMIValue","parts","interaction","interactions","DEPENDENCY_NOT_ESTABLISHED","checkDuplicateChoiceResponse","response_type","checkValidResponseType","GENERAL_SET_FAILURE","interaction_type","nodes","delimiter","checkCorrectResponseValue","interaction_count","response","pattern","pattern_index","limit","duplicate","checkDuplicatedPattern","_commonGetCMIValue","detail","basicMessage","detailMessage","error_descriptions","formatRegex","RegExp","format","removeCorrectResponsePrefixes","delimiter2","values","matches","TYPE_MISMATCH","format2","unique","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","CMILangcr","lang","toLowerCase","newAPI","terminateCommit","cmiExport","renderCMIToJSONObject","total_time","getCurrentTotalTime","flattened","flatten","mode","credit","completion_threshold","progress_measure","completion_status","scaled_passing_score","score","scaled","success_status","navRequest","encodeURIComponent","renderCommitCMI","processHttpRequest","scorm12_constants","scorm12_regex","checkValidFormat","regexPattern","errorClass","allowEmptyString","checkValidRange","rangePattern","ranges","BaseCMI","getTime","CMIScore","score_children","score_range","invalidTypeCode","invalidRangeCode","decimalRegex","INVALID_SET_VALUE","VALUE_OUT_OF_RANGE","CMIDecimal","_children","raw","jsonString","children","Scorm2004ValidationError","Util","learner_responses","learner","throwReadOnlyError","throwWriteOnlyError","WRITE_ONLY_ELEMENT","throwTypeMismatchError","throwDependencyNotEstablishedError","throwGeneralSetError","check2004ValidFormat","check2004ValidRange","cmi_children","learner_preference","CMILearnerPreference","Scorm2004CMIScore","comments_from_learner","CMICommentsFromLearner","comments_from_lms","CMICommentsFromLMS","CMIInteractions","objectives","CMIObjectives","_version","CMICStatus","entry","exit","CMIExit","launch_data","learner_id","learner_name","location","CMIString1000","max_time_allowed","progress_range","session_time","CMITimespan","CMISStatus","suspend_data","CMIString64000","time_limit_action","sessionTime","startTime","start_time","seconds","getSecondsAsISODuration","addTwoDurations","student_preference_children","audio_level","audio_range","language","CMILang","delivery_speed","speed_range","audio_captioning","CMISInteger","text_range","interactions_children","objectives_children","comments_children","correct_responses_children","id","CMILongIdentifier","CMIType","timestamp","CMITime","weighting","learner_response","CMIResult","latency","description","CMILangString250","scaled_range","readOnlyAfterInit","comment","CMILangString4000","CMIString250","CMIFeedback","ADLNav","request_valid","ADLNavRequestValid","NAVEvent","_target","_","previous","continue","LOG_LEVEL_NONE","core_children","student_data_children","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","MULTIPLE_TERMINATIONS","CMIString256","CMIString4096","CMIInteger","CMIIdentifier","CMIIndex","CMIStatus","CMIStatus2","weighting_range","CMIString200","CMIString4000","CMILangString250cr","CMIShortIdentifier","CMIIndexStore","NAVBoolean","NAVTarget","scorm12_errors","aicc_errors","scorm2004_errors","errorMessage","detailedMessage","Scorm12ValidationError","AICCValidationError","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","getSecondsAsHHMMSS","totalSeconds","hours","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","duration","remainder","sign","current_seconds","getTimeAsSeconds","timeString","timeRegex","getDurationAsSeconds","durationRegex","exec","years","months","days","first","second","addHHMMSSTimeStrings","data","recurse","cur","prop","isArray","l","isEmpty","p","regex","m","num","window"],"sourceRoot":""}